// kernel.cpp
//
// This is the main kernel file for the X99 operating system.
//
// Copyright (c) 2015, Mark Aldrich, All rights reserved.


#include "kernel.h"
#include "xlib.h"

extern "C"
void kernel_main()
{
	xlib::video::writeString("Welcome to the X99 operating system.");
	xlib::video::newLine();
	xlib::video::writeString("Starting bar...");
	xlib::video::newLine();
	p.start();
	
	xlib::video::newLine();
	xlib::video::writeString("Done executing bar.");
	xlib::video::newLine();
	xlib::video::writeString("Starting foo...");
	xlib::video::newLine();
	f.start();
}// xlib.cpp
//
// This is the "standard library" to be used by the kernel and programs.
//
// Copyright (c) 2015, Mark Aldrich, All rights reserved.

#include "xlib.h"

// X99 Library
namespace xlib
{
	namespace video
	{
		int column = 0;
		int row = 0;
		void writeString(const char* string)
		{
			while(*string != 0)
			{
				char* v = (char*) (VIDEO_MEMORY + (((row * 80) + column) * 2));
				*v = *string;
				column++;
				
				if(column >= MAX_COLUMN)
				{
					column = 0;
					row++;
				}
				
				if(row >= MAX_ROW)
				{
					column = 0;
					row = 0;
				}
				
				string++;
			}
		}
		
		void newLine()
		{
			column = 0;
			row++;
			
			if(row >= MAX_ROW)
			{
				row = 0;
			}
		}
	}
	
	namespace misc
	{
		char* itoa(int val, int base)
		{
			
			if(val == 0)
			{
				return "0";
			}
			
			static char buf[32] = {0};
			
			int i = 30;
			
			for(; val && i ; --i, val /= base)
			
			buf[i] = "0123456789abcdef"[val % base];
			
			return &buf[i+1];
			
		}
	}
	
	namespace keyboard
	{
		
	}
	
	namespace io
	{
		
	}
	
	namespace program
	{
		X99Program::X99Program() {}
		bool X99Program::start() {return true;}
	}
}
#include "bar.h"
#include "barlib.h"

namespace _Bar
{
	void startBar()
	{
		_barlib::printWelcomeMessageForBar();
	}
}#include "barlib.h"
#include "../../kernel/xlib.h"

namespace _barlib
{
	void printWelcomeMessageForBar()
	{
		xlib::video::writeString("Welcome to Bar!");
		xlib::video::newLine();
		xlib::video::newLine();
		xlib::video::writeString("Welcome again to Bar!");
	}
}#include "x99program_bar.h"
#include "../../kernel/xlib.h"
#include "bar.h"

X99Program_bar::X99Program_bar()
{
	aliases[0] = "bar";
	aliases[1] = "Bar";
	aliases[2] = "BAR";
}
	
bool X99Program_bar::start()
{
	_Bar::startBar();
	return false;
}#include "foo.h"
#include "foolib.h"

namespace _Foo
{
	void startFoo()
	{
		_foolib::printWelcomeMessage();
		
		// Keep control of the CPU in the hands of the program,
		// rather than the kernel or the bootstrapper.
		for(;;) {}
	}
}#include "foolib.h"
#include "../../kernel/xlib.h"

namespace _foolib
{
	void printWelcomeMessage()
	{
		xlib::video::writeString("Welcome to Foo!");
		xlib::video::newLine();
		xlib::video::newLine();
		xlib::video::writeString("Welcome again!");
	}
}#include "x99program_foo.h"
#include "../../kernel/xlib.h"
#include "foo.h"

X99Program_foo::X99Program_foo()
{
	aliases[0] = "foo";
	aliases[1] = "Foo";
	aliases[2] = "FOO";
}
	
bool X99Program_foo::start()
{
	_Foo::startFoo();
	return false;
}